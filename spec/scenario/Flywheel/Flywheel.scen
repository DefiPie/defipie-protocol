-- NewController, but with markets listed so that we can make them pie markets in constructor
Macro FlywheelController price=10.0 borrowRate=0.000005 pieInitAmount=5000000e18
    NewRegistryProxy
    Unitroller Deploy RegistryProxy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy (PriceOracle Address) (RegistryProxy Address) (RegistryProxy Address)
    PriceOracleProxy SetPrice (PriceOracle Address) price -- fixed oracle, set price for all assets
    ----g4
    ControllerImpl Deploy ScenarioG4 ControllerScen
    Unitroller SetPendingImpl ControllerScen
    ControllerImpl ControllerScen Become
    Distributor Deploy
    DistributorProxy Deploy (Distributor Address) (RegistryProxy Address) (Unitroller Address)
    Controller SetDistributor (DistributorProxy Address)
    Assert Equal (DistributorProxy PieRate) 0
    DistributorProxy SetPieRate 1e18
    Assert Equal (DistributorProxy PieRate) 1e18
    --list some tokens
    NewPToken ZRX pZRX borrowRate 2e9 0 8
    NewPToken BAT pBAT borrowRate 2e9 0 8
    RegistryProxy SetPriceOracle (PriceOracleProxy Address)
    Controller SetMaxAssets 20
    Controller SetCloseFactor 0.5
    Controller LiquidationIncentive 1.1
    Support pZRX collateralFactor:0.5
    Support pBAT collateralFactor:0.5
    -- final
    Assert Equal (DistributorProxy PieSpeed pZRX) 0
    Assert Equal (DistributorProxy PieSpeed pBAT) 0
    DistributorProxy SetPieSpeed pZRX 1
    DistributorProxy SetPieSpeed pBAT 1
    Erc20 Deploy Standard PIE "PIE Token" 18
    Give (Address DistributorProxy) pieInitAmount PIE
    DistributorProxy SetPieAddress (Address PIE)
    Assert Equal (DistributorProxy PieAddress) (Address PIE)

Macro InitSpeeds
    Prep Geoff 100e18 ZRX pZRX
    Mint Geoff 50e18 pZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT pBAT
    Mint Coburn 6e18 pBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn pBAT
    Borrow Coburn 1e18 pZRX
    Assert Equal (DistributorProxy PieSpeed pZRX) 1
    Assert Equal (DistributorProxy PieSpeed pBAT) 1
    DistributorProxy RefreshPieSpeeds
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    Assert Equal (DistributorProxy PieSpeed pBAT) 0 -- no borrows

Test "Accrue PIE during a mint"
    FlywheelController
    InitSpeeds
    Assert Equal (DistributorProxy BlockNumber) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 0
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    Assert Equal (DistributorProxy PieSpeed pBAT) 0
    FastForward 300000 Blocks
    Assert Equal (DistributorProxy BlockNumber) 300000
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Mint Geoff 1e18 pZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 1.2000000000001e49
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 300000
    Assert Equal (Erc20 PIE TokenBalance Geoff) 300000e18
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 1.2000000000001e49

Test "Accrue PIE during a borrow"
    FlywheelController
    InitSpeeds
    Assert Equal (DistributorProxy PieAccrued Coburn) 0
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 1e36
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 0
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 1e36
    Assert Equal (PToken pZRX CallNum "borrowIndex()") 1e18
    FastForward 300000 Blocks
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 1e36
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 0
    Assert Equal (DistributorProxy PieAccrued Coburn) 0
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 1e36
    Assert Equal (PToken pZRX CallNum "borrowIndex()") 1e18
    Borrow Coburn 0.1e18 pZRX
    Assert Equal (PToken pZRX CallNum "borrowIndex()") 2.5e18
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 3.00001e41
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 3.00001e41
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 300000
    Assert Equal (Erc20 PIE TokenBalance Coburn) 300000e18
    Assert Equal (DistributorProxy PieAccrued Coburn) 0

Test "Accrue PIE during a redeem"
    FlywheelController
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Redeem Geoff 1e9 pZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 1.2000000000001e49
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 300000
    Assert Equal (Erc20 PIE TokenBalance Geoff) 300000e18
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 1.2000000000001e49

Test "Accrue PIE during a repayBorrow"
    FlywheelController
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Prep Coburn 0.5e18 ZRX pZRX
    RepayBorrow Coburn 0.5e18 pZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 =  3.00001e41
    Assert Equal (DistributorProxy PieAccrued Coburn) 0
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 3.00001e41
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 300000
    Assert Equal (Erc20 PIE TokenBalance Coburn) 300000e18
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 3.00001e41

Test "Accrue PIE during a repayBorrowBehalf of 0"
    FlywheelController
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    -- confirm we can init all flywheel accounts for free
    RepayBorrowBehalf Jared Coburn 0 pZRX
    -- new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 1e18 = 3.00001e41
    Assert Equal (DistributorProxy PieAccrued Coburn) 0
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 3.00001e41
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 300000
    Assert Equal (Erc20 PIE TokenBalance Coburn) 300000e18
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 3.00001e41

Test "Accrue PIE during a liquidation"
    FlywheelController
    InitSpeeds
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    Assert Equal (DistributorProxy PieSpeed pBAT) 0
    --coburn zrx borrow, bat supply. geoff zrx supply
    FastForward 600000 Blocks--1e18 borrow * (1 + 600000 * 0.000005) = 3.5e18 borrow > 6e18 collateral * 0.5 CF
    Prep Geoff Some ZRX pZRX
    From Geoff (PToken pZRX Liquidate Coburn pBAT 0.5e18)
    -- zrx borrow index is updated and pie distributed
    -- * new index = initVal + deltaBlocks * borrowSpeed * 1e36 / totalBorrows
    -- * new index = 1e36 + 600000 * 1e18 * 1e36 / 1e18 = 6.00001E41
    Assert Equal (DistributorProxy PieBorrowState pZRX "index") 6.00001e41
    Assert Equal (DistributorProxy PieBorrowState pZRX "block") 600000
    -- zrx supply index isnt updated and pie isnt distributed for zrx supply
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 1e36
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 0
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 1e36--no change, minted in init
    -- bat supply/borrow index is not updated, since there is no pie speed
    Assert Equal (DistributorProxy PieSupplyState pBAT "index") 1e36
    Assert Equal (DistributorProxy PieSupplyState pBAT "block") 0
    -- neither is borrow state. block is 0 because update fn is never even called
    Assert Equal (DistributorProxy PieBorrowState pBAT "index") 1e36
    Assert Equal (DistributorProxy PieBorrowState pBAT "block") 0
    --
    Assert Equal (DistributorProxy PieSupplierIndex pBAT Coburn) 1e36
    Assert Equal (DistributorProxy PieBorrowerIndex pZRX Coburn) 6.00001e41
    Assert Equal (Erc20 PIE TokenBalance Coburn) 600000e18
    Assert Equal (DistributorProxy PieAccrued Coburn) 0
    --
    Assert Equal (DistributorProxy PieSupplierIndex pBAT Geoff) 1e36
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    Assert Equal (DistributorProxy PieAccrued Geoff) 0

Test "Accrue PIE during a transfer"
    FlywheelController
    InitSpeeds
    FastForward 300000 Blocks
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 1e36
    Transfer Geoff Jared 2.5e10 pZRX
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 300000 * 1e18 * 1e36 / 2.5e10 = 1.2000000000001e49
    Assert Equal (Erc20 PIE TokenBalance Geoff) 300000e18
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 1.2000000000001e49
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 300000
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 1.2000000000001e49
    --
    Assert Equal (DistributorProxy PieAccrued Jared) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 1.2000000000001e49
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 300000
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Jared) 1.2000000000001e49

Test "Accrues correctly when market is added, deactivated, and activated again"
    FlywheelController
    InitSpeeds
    NewPToken DAI pDAI
    --
    Support pDAI collateralFactor:0.5
    DistributorProxy SetPieSpeed pDAI 1
    DistributorProxy SetPieSpeed pBAT 1
    Assert Equal (DistributorProxy GetPieMarkets) [(Address pZRX) (Address pBAT) (Address pDAI)]
    Prep Jared Some DAI pDAI
    Mint Jared 6e18 pDAI
    EnterMarkets Geoff pZRX
    Borrow Geoff 0.5e18 pDAI
    Borrow Coburn 0.5e18 pDAI
    DistributorProxy RefreshPieSpeeds
    Assert Equal (DistributorProxy PieSpeed pZRX) 0.5e18
    Assert Equal (DistributorProxy PieSpeed pDAI) 0.5e18
    --
    FastForward 100 Blocks
    DistributorProxy SetPieSpeed pDAI 0
    DistributorProxy ClaimPie Geoff
    Assert Equal (Erc20 PIE TokenBalance Geoff) 75e18--half of cdai, all of zrx(.25e18 + .5e18) * 100
    DistributorProxy SetPieSpeed pBAT 1
    DistributorProxy SetPieSpeed pZRX 1e18
    Assert Equal (DistributorProxy GetPieMarkets) [(Address pZRX) (Address pBAT)]
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    Assert Equal (DistributorProxy PieSpeed pDAI) 0
    --
    FastForward 100 Blocks
    DistributorProxy ClaimPie Geoff
    Assert Equal (Erc20 PIE TokenBalance Geoff) 175e18-- += 1e18 * 100
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    --
    DistributorProxy SetPieSpeed pDAI 0.5e18
    DistributorProxy SetPieSpeed pZRX 0.5e18
    FastForward 100 Blocks
    DistributorProxy ClaimPie Geoff
    Assert Equal (Erc20 PIE TokenBalance Geoff) 250e18--half of cdai, all of zrx. += (.25 + .5) * 100
    Assert Equal (DistributorProxy PieAccrued Geoff) 0

Test "TransferPie handles running out of PIE in Controller correctly"
    FlywheelController price:10.0 borrowRate:0.000005 pieInitAmount:1e18
    InitSpeeds
    Assert Equal (DistributorProxy BlockNumber) 0
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 0
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    Assert Equal (PToken pZRX CallNum "borrowIndex()") 1e18
    FastForward 2 Blocks
    Assert Equal (DistributorProxy BlockNumber) 2
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    DistributorProxy ClaimPie Geoff
    -- new index = initVal + deltaBlocks * supplySpeed * 1e36 / totalSupply
    -- new index = 1e36 + 2 * 1e18 * 1e36 / 2.5e10 = 8.0000001e43
    Assert Equal (DistributorProxy PieSupplyState pZRX "index") 8.0000001e43
    Assert Equal (DistributorProxy PieSupplyState pZRX "block") 2
    Assert Equal (DistributorProxy PieSupplierIndex pZRX Geoff) 8.0000001e43
    Assert Equal (DistributorProxy PieAccrued Geoff) 2e18
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    Give (Address DistributorProxy) 1e18 PIE
    Assert Equal (DistributorProxy PieAccrued Geoff) 2e18
    Assert Equal (Erc20 PIE TokenBalance Geoff) 0
    DistributorProxy ClaimPie Geoff
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (Erc20 PIE TokenBalance Geoff) 2e18

Test "Changing PIE rate continues to distribute at the correct speed"
    FlywheelController
    InitSpeeds
    --
    Assert Equal (DistributorProxy PieSpeed pZRX) 1e18
    FastForward 10 Blocks
    DistributorProxy SetPieSpeed pZRX 2e18
    Assert Equal (DistributorProxy PieSpeed pZRX) 2e18
    FastForward 10 Blocks
    DistributorProxy ClaimPie Geoff
    Assert Equal (DistributorProxy PieAccrued Geoff) 0
    Assert Equal (Erc20 PIE TokenBalance Geoff) 30e18
