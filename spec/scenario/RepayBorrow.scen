-- Tests for repaying borrows

Macro NewBorrow borrowAmount borrowRate
    NewController price:1.0 -- TODO: This should really be a price for a specific asset
    NewPToken ZRX pZRX
    NewPToken BAT pBAT borrowRate -- note: cannot use macros with named args right now
    Give pBAT 10e18 BAT -- Faucet some bat to borrow
    Support pZRX collateralFactor:0.5
    Support pBAT collateralFactor:0.5
    Prep Geoff Some ZRX pZRX
    Mint Geoff 100e18 pZRX
    EnterMarkets Geoff pZRX pBAT
    Borrow Geoff borrowAmount pBAT

Test "Borrow, hold a few blocks, and repay part"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve pBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 pBAT
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) Zero
    Assert Equal (Erc20 BAT TokenBalance pBAT) 10e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 3e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 3e18

Test "Borrow, hold a few blocks, and repay full"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    Give Geoff 1.5e18 BAT -- Geoff had the 1.0e18 borrowed BAT
    From Geoff (Erc20 BAT Approve pBAT 2.5e18)
    RepayBorrow Geoff 2.5e18 pBAT
    Assert Equal (PToken pBAT BorrowBalance Geoff) 0e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 11.5e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 0e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18

Test "Borrow, hold a few blocks, and repay too much v1 checks"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay too much
    Give Geoff 2.5e18 BAT -- Geoff had the 1.0e18 borrowed BAT
    From Geoff (Erc20 BAT Approve pBAT 3.5e18)
    RepayBorrow Geoff 3.5e18 pBAT
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 11.5e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 0e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18

Test "Borrow, hold a few blocks, and repay too much v2 checks"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    Prep Geoff 5e18 BAT pBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) -2.5e18
    Expect Changes (Erc20 BAT TokenBalance pBAT) 2.5e18
    RepayBorrow Geoff 5e18 pBAT
    -- Let's check the overall numbers
    Assert Equal (PToken pBAT BorrowBalance Geoff) 0e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 0e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 0e18

Test "Borrow, and get a negative total cash situation"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 9e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 1e18 * (1 + 9800000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 50e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 50e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve pBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 pBAT
    Assert Equal (PToken pBAT BorrowBalance Geoff) 49e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 49e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 10e18

Test "Borrow, hold a few blocks, and repay behalf part"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token from another user
    Prep Torrey 1.0e18 BAT pBAT
    RepayBorrowBehalf Torrey Geoff 1.0e18 pBAT
    Assert Equal (PToken pBAT BorrowBalance Torrey) Zero
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Torrey) 0e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance pBAT) 10e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Torrey) Zero
    Assert Equal (PToken pBAT BorrowBalance Geoff) 3e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 3e18

Test "Prohibit repay by controller rejection due to mock unlist"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT pBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance pBAT) Zero
    Controller UnList pZRX -- Mock unlist ZRX
    RepayBorrow Geoff 2.5e18 pZRX
    Assert Failure CONTROLLER_REJECTION REPAY_BORROW_CONTROLLER_REJECTION MARKET_NOT_LISTED
    -- Let's check the overall numbers
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient allowance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 100e18 BAT pBAT allowanceAmount:1.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance pBAT) Zero
    RepayBorrow Geoff 2.5e18 pBAT
    Assert Revert "revert Insufficient allowance"
    -- Let's check the overall numbers
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient balance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (PToken pBAT BorrowBalance Geoff) 1e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 0e18 BAT pBAT allowanceAmount:2.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance pBAT) Zero
    RepayBorrow Geoff 2.5e18 pBAT
    Assert Revert "revert Insufficient balance"
    -- Let's check the overall numbers
    Assert Equal (PToken pBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (PToken pBAT TotalBorrowsCurrent) 2.5e18
