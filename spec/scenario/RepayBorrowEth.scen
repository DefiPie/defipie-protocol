-- Tests for repaying borrows

Macro SetupBorrow borrowRate
    NewController price:1.0 -- TODO: This should really be a price for a specific asset
    ListedPToken ZRX pZRX borrowRate
    ListedEtherToken pETH borrowRate 0.005e9
    SetCollateralFactor pZRX collateralFactor:0.5
    SetCollateralFactor pETH collateralFactor:0.5
    Donate pETH 0.003e18
    Prep Geoff Some ZRX pZRX
    Mint Geoff 100e18 pZRX
    EnterMarkets Geoff pZRX pETH

Macro NewBorrowEth borrowAmount borrowRate
    SetupBorrow borrowRate
    Borrow Geoff borrowAmount pETH

Test "Borrow, hold a few blocks, and repay part"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (EtherBalance Geoff) -0.001e18
    Expect Changes (EtherBalance pETH) +0.001e18
    RepayBorrowEth Geoff 0.001e18 pETH
    ---- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0015e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 2000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.003e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.003e18

Test "Borrow, hold a few blocks, and repay part via maximillion"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy pETH
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (EtherBalance Geoff) -0.001e18
    Expect Changes (EtherBalance pETH) +0.001e18
    RepayBorrowEthMax Geoff 0.001e18 pETH
    ---- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0015e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.003e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.003e18

Test "Don't borrow and then do repay"
    SetupBorrow borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    -- Now let's repay one full token
    Expect Changes (EtherBalance Geoff) Zero
    Expect Changes (EtherBalance pETH) Zero
    RepayBorrowEth Geoff 0 pETH
    ---- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero

Test "Don't borrow and repay part via maximillion"
    SetupBorrow borrowRate:0.000005
    Maximillion Deploy pETH
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    -- Now let's repay one full token
    Expect Changes (EtherBalance Geoff) Zero
    Expect Changes (EtherBalance pETH) Zero
    RepayBorrowEthMax Geoff 0.001e18 pETH
    ---- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay full"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (EtherBalance Geoff) -0.0025e18
    Expect Changes (EtherBalance pETH) +0.0025e18
    RepayBorrowEth Geoff 0.0025e18 pETH
    -- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay full via maximillion"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy pETH
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (EtherBalance Geoff) -0.0025e18
    Expect Changes (EtherBalance pETH) +0.0025e18
    RepayBorrowEthMax Geoff 0.0025e18 pETH
    -- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay too much without maximillion"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (EtherBalance Geoff) Zero
    Expect Changes (EtherBalance pETH) Zero
    -- TODO: This currently drains the sent-eth
    AllowFailures
    RepayBorrowEth Geoff 1.0e18 pETH
    Assert Revert "revert value mismatch"
    -- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.0025e18

Test "Borrow, hold a few blocks, and repay too much via maximillion"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy pETH
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (EtherBalance Geoff) -0.0025e18
    Expect Changes (EtherBalance pETH) +0.0025e18
    RepayBorrowEthMax Geoff 1.0e18 pETH
    -- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) Zero
    Assert Equal (PToken pETH TotalBorrowsCurrent) Zero

Test "Borrow, and get a negative total cash situation"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 0.001e18 * (1 + 9800000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.05e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.05e18
    -- Now let's repay one bit
    RepayBorrowEth Geoff 0.001e18 pETH
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.049e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.049e18

Test "Borrow, hold a few blocks, and repay behalf part"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token from another user
    RepayBorrowEthBehalf Torrey Geoff 0.001e18 pETH
    Assert Equal (PToken pETH BorrowBalance Torrey) Zero
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0015e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 200000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Torrey) Zero
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.003e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.003e18

Test "Prohibit repay by controller hook"
    NewBorrowEth borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.001e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (EtherBalance Geoff) Zero
    Expect Changes (EtherBalance pETH) Zero
    Controller UnList pETH -- Mock unlist pETH
    AllowFailures
    RepayBorrowEth Geoff 0.001e18 pETH
    Assert RevertFailure CONTROLLER_REJECTION "revert repayBorrow failed"
    ---- Let's check the overall numbers
    Assert Equal (PToken pETH BorrowBalance Geoff) 0.0025e18
    Assert Equal (PToken pETH TotalBorrowsCurrent) 0.0025e18
