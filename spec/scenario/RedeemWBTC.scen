-- Redeem Tests

Test "Mint WBTC then Redeem All"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check current affairs
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (PToken pWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 400e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 100e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 60e8

Test "Mint WBTC, Enter and then Redeem All"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check current affairs
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (PToken pWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff pWBTC
    Redeem Geoff 400e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 100e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 60e8

Test "Mint WBTC then Redeem Part"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check current affairs
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (PToken pWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 250e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 250e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 45e8

Test "Mint WBTC then Redeem Too Much"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check and hold static
    Invariant Static (PToken pWBTC ExchangeRateStored)
    Invariant Remains (Erc20 pWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    AllowFailures
    Redeem Geoff 501e8 pWBTC
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3"

Test "Mint WBTC then Redeem Zero"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check current affairs
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (PToken pWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 0e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8

Test "Mint WBTC then redeem with interest - no reserves"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Invariant Remains (PToken pWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC pWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    Redeem Geoff 409.0909091e8 pWBTC
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 45e8
    Assert Equal (Erc20 WBTC TokenBalance pWBTC) 10e8
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 90.9090909e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 9.99999999e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.110000000011

Test "Mint WBTC then redeem part with interest - no reserves"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Invariant Remains (PToken pWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC pWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    Redeem Geoff 408.0909091e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 91.9090909e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 10.10999999e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.11000000001088032
    Assert Equal (Erc20 WBTC TokenBalance pWBTC) 10.11e8

Test "Mint WBTC then redeem with reserves and interest"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 50e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC pWBTC 10e8 5e8 interestRate:0.000001 blocks:500000 reserveRate:0.2
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   The reserves should get 20% of this, or 1e8, and the rest
    --   is due pro-rata to all suppliers. We just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 500e8
    Assert Equal (PToken pWBTC Reserves) 1e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 54e8
    -- 55e8 + 0e8 - 1e8 / 500
    Assert Equal (PToken pWBTC ExchangeRate) 0.108
    -- Now redeem all with interest
    Redeem Geoff 407.4074074e8 pWBTC
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 43.99999999e8
    Assert Equal (Erc20 WBTC TokenBalance pWBTC) 11.00000001e8
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 92.5925926e8
    Assert Equal (PToken pWBTC Reserves) 1e8
    Assert Equal (PToken pWBTC UnderlyingBalance Geoff) 10e8
    Assert Equal (PToken pWBTC ExchangeRate) 0.10800000009936

Test "Two users Mint WBTC, one redeems"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff Some WBTC pWBTC
    Prep Torrey Some WBTC pWBTC
    Mint Geoff 20e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 200e8
    Assert Equal (Erc20 pWBTC TotalSupply) 200e8
    Mint Torrey 20e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 200e8
    Assert Equal (Erc20 pWBTC TokenBalance Torrey) 200e8
    Assert Equal (Erc20 pWBTC TotalSupply) 400e8
    Redeem Torrey 100e8 pWBTC
    Assert Equal (Erc20 pWBTC TokenBalance Geoff) 200e8
    Assert Equal (Erc20 pWBTC TokenBalance Torrey) 100e8
    Assert Equal (Erc20 pWBTC TotalSupply) 300e8

Test "Redeem WBTC transfer out fails"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check current affairs
    Invariant Remains (Erc20 pWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    Invariant Static (PToken pWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Erc20 WBTC Pause
    AllowFailures
    Redeem Geoff 500e8 pWBTC
    Assert Revert

Test "Mint WBTC, Enter, then Redeem Too Much (collateral factor: 0)"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check and hold static
    Invariant Static (PToken pWBTC ExchangeRateStored)
    Invariant Remains (Erc20 pWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff pWBTC
    AllowFailures
    Redeem Geoff 501e8 pWBTC
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3"

Test "Mint WBTC, Enter, then Redeem Too Much (collateral factor: 0.1)"
    NewController
    ListedPToken WBTC pWBTC initialExchangeRate:0.1 tokenType:WBTC
    Controller SetCollateralFactor pWBTC 0.1
    Prep Geoff 70e8 WBTC pWBTC
    Mint Geoff 50e8 pWBTC
    -- Check and hold static
    Invariant Static (PToken pWBTC ExchangeRateStored)
    Invariant Remains (Erc20 pWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff pWBTC
    AllowFailures
    Redeem Geoff 501e8 pWBTC
    Assert Failure CONTROLLER_REJECTION REDEEM_CONTROLLER_REJECTION INSUFFICIENT_LIQUIDITY
