
Test "Check Name"
    Pie Deploy Geoff
    Assert Equal (Pie Name) "DeFiPie"

Test "Check Symbol"
    Pie Deploy Geoff
    Assert Equal (Pie Symbol) "PIE"

Test "Check Decimals"
    Pie Deploy Geoff
    Assert Equal (Pie Decimals) 18

Test "Check Total Supply"
    Pie Deploy Geoff
    Assert Equal (Pie TotalSupply) 10000000e18

Test "Check account receives Total Supply after deploy and emits Transfer event"
    Pie Deploy Geoff
    Assert Equal (Pie TokenBalance Geoff) 10000000e18
    Assert Log Transfer (from (Address Zero)) (to (Address Geoff)) (amount "10000000000000000000000000")

Test "Check approve sets correct approval and emits Approval event"
    Pie Deploy Geoff
    From Geoff (Pie Approve Jared 10)
    Assert Equal (Pie Allowance Geoff Jared) 10
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "10")

Test "Check approve with bad allowance reverts"
    Pie Deploy Geoff
    AllowFailures
    From Geoff (Pie Approve Jared 1e70)
    Assert Revert "revert Pie::approve: amount exceeds 96 bits"

Test "Check transfer updates balances correctly, emits Transfer event, and returns true"
    Pie Deploy Geoff
    From Geoff (Pie Transfer Jared 10)
    Assert Equal (Pie TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Pie TokenBalance Jared) 10
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    Pie Deploy Geoff
    From Geoff (Pie Approve Jared UInt256Max)
    From Jared (Pie TransferFrom Geoff Jared 10)
    Assert Equal (Pie TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Pie TokenBalance Jared) 10
    Assert Equal (Pie Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with unlimited allowance updates balances correctly, emits Transfer event, and returns true"
    Pie Deploy Geoff
    From Geoff (Pie Approve Jared UInt96Max)
    From Jared (Pie TransferFrom Geoff Jared 10)
    Assert Equal (Pie TokenBalance Geoff) 9999999999999999999999990
    Assert Equal (Pie TokenBalance Jared) 10
    Assert Equal (Pie Allowance Geoff Jared) UInt96Max
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "10")

Test "Check transferFrom with allowance updates balances correctly, emits Transfer event, and returns true"
    Pie Deploy Geoff
    From Geoff (Pie Approve Jared 10)
    From Jared (Pie TransferFrom Geoff Jared 9)
    Assert Equal (Pie TokenBalance Geoff) 9999999999999999999999991
    Assert Equal (Pie TokenBalance Jared) 9
    Assert Equal (Pie Allowance Geoff Jared) 1
    Assert Log Transfer (from (Address Geoff)) (to (Address Jared)) (amount "9")
    Assert Log Approval (owner (Address Geoff)) (spender (Address Jared)) (amount "1")

Test "Check transferFrom reverts with not sufficient allowance"
    Pie Deploy Geoff
    From Geoff (Pie Approve Jared 10)
    AllowFailures
    From Jared (Pie TransferFrom Geoff Jared 11)
    Assert Revert "revert Pie::transferFrom: transfer amount exceeds spender allowance"

Test "Check transfer reverts when transferring too much"
    Pie Deploy Geoff
    AllowFailures
    From Geoff (Pie Transfer Jared 10000001e18)
    Assert Revert "revert Pie::_transferTokens: transfer amount exceeds balance"

Test "Check transfer reverts when transferring to address 0"
    Pie Deploy Geoff
    AllowFailures
    From Geoff (Pie Transfer (Address Zero) 10000000e18)
    Assert Revert "revert Pie::_transferTokens: cannot transfer to the zero address"
